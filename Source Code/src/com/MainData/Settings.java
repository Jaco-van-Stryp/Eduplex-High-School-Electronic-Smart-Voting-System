//Coded And Re-Optimised By Jaco Van Stryp Grade 12/2 (Information Technology PAT Phase 3)
//Date Started 03/20/2018
//Date Finished 05/29/2018
package com.MainData;

import com.Backend.AntiOverload;
import com.Backend.AutoRepair;
import com.Backend.commonMethods;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JOptionPane;

public class Settings extends javax.swing.JFrame {
    boolean voteSelected = false;
    commonMethods cm = new commonMethods();
    AntiOverload ao = new AntiOverload();
int currentVoteList = 1;
int safeNumber = 0;
    /**
     * Creates new form Settings
     */

    public Settings() {

        initComponents();
              g8b.setText(cm.getGradeData("8", "b", "1"));
        g8g.setText(cm.getGradeData("8", "f", "1"));
        g9b.setText(cm.getGradeData("9", "b", "1"));
        g9g.setText(cm.getGradeData("9", "f", "1"));
        g10b.setText(cm.getGradeData("10", "b", "1"));
        g10g.setText(cm.getGradeData("10", "f", "1"));
        g11b.setText(cm.getGradeData("11", "b", "1"));
        g11g.setText(cm.getGradeData("11", "f", "1"));
        gTb.setText(cm.getGradeData("Teacher", "b", "1"));
        gTg.setText(cm.getGradeData("Teacher", "f", "1"));
        //sets all check boxes to the state they should be acording to the database
        if (this.checkStatus("autopilot") == true) {
            autopilot.setSelected(true);
        }
        if (this.checkStatus("AllowVote") == true) {
            allowVote.setSelected(true);
        }
        if (this.checkStatus("AllowNominate") == true) {
            allowNominate.setSelected(true);
        }
        if (this.checkStatus("RequireWitness") == true) {
            RequireWitnessDetails.setSelected(true);
        }
        if (this.checkStatus("AllowGetIP") == true) {
            allowGetIPAddress.setSelected(true);
        }
        if (this.checkStatus("ForceBypassMode") == true) {
            ForceBypassMode.setSelected(true);
        }
        if (this.checkStatus("ForceRandomisedDisplay") == true) {
            forceRandom.setSelected(true);
        }
        if (this.checkStatus("DisplayPictures") == true) {
            displayPictures.setSelected(true);
        }
        if (displayPictures.isSelected()) {
            displayTextOnImages.setVisible(true);
        } else {
            displayTextOnImages.setVisible(false);

        }
        if (this.checkStatus("DisplayTextOnPictures") == true) {
            displayTextOnImages.setSelected(true);
        }
        if (this.checkStatus("PromptedUsersToDisplayName") == true) {
            promptedUsers.setSelected(true);
        }
        if (this.checkStatus("TestMode") == true) {
            EnableTestMode.setSelected(true);
        }
        if (this.checkStatus("TrackVotedFor") == true) {
            trackVotedFor.setSelected(true);
        }
        //sets the total votes every grade can vote for
    
        CCodeForTextV1.setText(cm.getTextColour(1) + "");
        CCodeForTextV2.setText(cm.getTextColour(2) + "");
        CCodeForTextV3.setText(cm.getTextColour(3) + "");
        int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
        int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
        int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());
        CCodeForTextV1.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
        CCodeForTextV2.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
        CCodeForTextV3.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
      //  aConnections.setText(ao.getActiveComputers() + "");
     //   mConnections.setText(ao.getMaxComputers() + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btnSettings5 = new javax.swing.JButton();
        allowVote = new javax.swing.JCheckBox();
        allowNominate = new javax.swing.JCheckBox();
        allowGetIPAddress = new javax.swing.JCheckBox();
        RequireWitnessDetails = new javax.swing.JCheckBox();
        ForceBypassMode = new javax.swing.JCheckBox();
        g8b = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        g8g = new javax.swing.JTextField();
        g9g = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        g9b = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        g10b = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        g10g = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        g11g = new javax.swing.JTextField();
        g11b = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        forceRandom = new javax.swing.JCheckBox();
        displayPictures = new javax.swing.JCheckBox();
        CCodeForTextV1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        CCodeForTextV2 = new javax.swing.JTextField();
        CCodeForTextV3 = new javax.swing.JTextField();
        displayTextOnImages = new javax.swing.JCheckBox();
        EnableTestMode = new javax.swing.JCheckBox();
        promptedUsers = new javax.swing.JCheckBox();
        autopilot = new javax.swing.JCheckBox();
        btnSettings7 = new javax.swing.JButton();
        btnSettings8 = new javax.swing.JButton();
        btnSettings9 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        trackVotedFor = new javax.swing.JCheckBox();
        btnSettings10 = new javax.swing.JButton();
        btnSettings11 = new javax.swing.JButton();
        gTb = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        gTg = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Eduplex Highschool Electronic Voting System");
        setUndecorated(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(8, 8, 94));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 102, 51));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Eduplex High School Electronic Voting System");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Settings");

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/res/Eduplex EVS v5 Small.png"))); // NOI18N
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel21MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(176, 176, 176))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(339, 339, 339))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel21)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSettings5.setBackground(new java.awt.Color(255, 89, 33));
        btnSettings5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSettings5.setForeground(new java.awt.Color(255, 255, 255));
        btnSettings5.setText("Save Data & Back");
        btnSettings5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettings5ActionPerformed(evt);
            }
        });

        allowVote.setBackground(new java.awt.Color(255, 255, 255));
        allowVote.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        allowVote.setForeground(new java.awt.Color(255, 255, 255));
        allowVote.setText("Allow Users To Vote");
        allowVote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allowVoteActionPerformed(evt);
            }
        });

        allowNominate.setBackground(new java.awt.Color(255, 255, 255));
        allowNominate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        allowNominate.setForeground(new java.awt.Color(255, 255, 255));
        allowNominate.setText("Allow Users To Nominate Others");

        allowGetIPAddress.setBackground(new java.awt.Color(255, 255, 255));
        allowGetIPAddress.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        allowGetIPAddress.setForeground(new java.awt.Color(255, 255, 255));
        allowGetIPAddress.setText("Allow Ability To Check Own IP Address");

        RequireWitnessDetails.setBackground(new java.awt.Color(255, 255, 255));
        RequireWitnessDetails.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        RequireWitnessDetails.setForeground(new java.awt.Color(255, 255, 255));
        RequireWitnessDetails.setText("Require Witness When Nominating");
        RequireWitnessDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RequireWitnessDetailsActionPerformed(evt);
            }
        });

        ForceBypassMode.setBackground(new java.awt.Color(255, 255, 255));
        ForceBypassMode.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ForceBypassMode.setForeground(new java.awt.Color(255, 255, 255));
        ForceBypassMode.setText("Force Bypass Mode (You only need Name and Surname)");
        ForceBypassMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForceBypassModeActionPerformed(evt);
            }
        });

        g8b.setBackground(new java.awt.Color(34, 34, 78));
        g8b.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        g8b.setForeground(new java.awt.Color(255, 255, 255));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Enter The Total Allowed Votes For Vote 1");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Grade 8 Boys");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Grade 8 Girls");

        g8g.setBackground(new java.awt.Color(34, 34, 78));
        g8g.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        g8g.setForeground(new java.awt.Color(255, 255, 255));
        g8g.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g8gActionPerformed(evt);
            }
        });

        g9g.setBackground(new java.awt.Color(34, 34, 78));
        g9g.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        g9g.setForeground(new java.awt.Color(255, 255, 255));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Grade 9 Girls");

        g9b.setBackground(new java.awt.Color(34, 34, 78));
        g9b.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        g9b.setForeground(new java.awt.Color(255, 255, 255));

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Grade 9 Boys");

        g10b.setBackground(new java.awt.Color(34, 34, 78));
        g10b.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        g10b.setForeground(new java.awt.Color(255, 255, 255));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Grade 10 Boys");

        g10g.setBackground(new java.awt.Color(34, 34, 78));
        g10g.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        g10g.setForeground(new java.awt.Color(255, 255, 255));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Grade 10 Girls");

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Grade 11 Girls");

        g11g.setBackground(new java.awt.Color(34, 34, 78));
        g11g.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        g11g.setForeground(new java.awt.Color(255, 255, 255));

        g11b.setBackground(new java.awt.Color(34, 34, 78));
        g11b.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        g11b.setForeground(new java.awt.Color(255, 255, 255));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Grade 11 Boys");

        forceRandom.setBackground(new java.awt.Color(255, 255, 255));
        forceRandom.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        forceRandom.setForeground(new java.awt.Color(255, 255, 255));
        forceRandom.setText("Force Nominations To Be Displayed Randomly (Limits to 30)");
        forceRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forceRandomActionPerformed(evt);
            }
        });

        displayPictures.setBackground(new java.awt.Color(255, 255, 255));
        displayPictures.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayPictures.setForeground(new java.awt.Color(255, 255, 255));
        displayPictures.setText("Enable Pictures ");
        displayPictures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayPicturesActionPerformed(evt);
            }
        });

        CCodeForTextV1.setBackground(new java.awt.Color(34, 34, 78));
        CCodeForTextV1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CCodeForTextV1.setForeground(new java.awt.Color(255, 255, 255));
        CCodeForTextV1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CCodeForTextV1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CCodeForTextV1MouseEntered(evt);
            }
        });
        CCodeForTextV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CCodeForTextV1ActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Vote Text Colour RGB");

        CCodeForTextV2.setBackground(new java.awt.Color(34, 34, 78));
        CCodeForTextV2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CCodeForTextV2.setForeground(new java.awt.Color(255, 255, 255));
        CCodeForTextV2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CCodeForTextV2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CCodeForTextV2MouseEntered(evt);
            }
        });

        CCodeForTextV3.setBackground(new java.awt.Color(34, 34, 78));
        CCodeForTextV3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CCodeForTextV3.setForeground(new java.awt.Color(255, 255, 255));
        CCodeForTextV3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CCodeForTextV3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CCodeForTextV3MouseEntered(evt);
            }
        });

        displayTextOnImages.setBackground(new java.awt.Color(255, 255, 255));
        displayTextOnImages.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayTextOnImages.setForeground(new java.awt.Color(255, 255, 255));
        displayTextOnImages.setText("Enable Text On Images");

        EnableTestMode.setBackground(new java.awt.Color(255, 255, 255));
        EnableTestMode.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        EnableTestMode.setForeground(new java.awt.Color(255, 255, 255));
        EnableTestMode.setText("Enable Test Mode (Does Not Save \"Pervious Voter\")");
        EnableTestMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnableTestModeActionPerformed(evt);
            }
        });

        promptedUsers.setBackground(new java.awt.Color(255, 255, 255));
        promptedUsers.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        promptedUsers.setForeground(new java.awt.Color(255, 255, 255));
        promptedUsers.setText("Prompt Users If They Want Their Name Shown");
        promptedUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promptedUsersActionPerformed(evt);
            }
        });

        autopilot.setBackground(new java.awt.Color(255, 255, 255));
        autopilot.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        autopilot.setForeground(new java.awt.Color(255, 255, 255));
        autopilot.setText("Autopilot");
        autopilot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autopilotActionPerformed(evt);
            }
        });

        btnSettings7.setBackground(new java.awt.Color(255, 89, 33));
        btnSettings7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSettings7.setForeground(new java.awt.Color(255, 255, 255));
        btnSettings7.setText("Multi-Vote");
        btnSettings7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettings7ActionPerformed(evt);
            }
        });

        btnSettings8.setBackground(new java.awt.Color(40, 224, 64));
        btnSettings8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSettings8.setForeground(new java.awt.Color(255, 255, 255));
        btnSettings8.setText("Vote 1");
        btnSettings8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettings8ActionPerformed(evt);
            }
        });

        btnSettings9.setBackground(new java.awt.Color(255, 89, 33));
        btnSettings9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSettings9.setForeground(new java.awt.Color(255, 255, 255));
        btnSettings9.setText("Vote 2");
        btnSettings9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettings9ActionPerformed(evt);
            }
        });

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Votes Allowed For:");

        trackVotedFor.setBackground(new java.awt.Color(255, 255, 255));
        trackVotedFor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        trackVotedFor.setForeground(new java.awt.Color(255, 255, 255));
        trackVotedFor.setText("Track Voted For");

        btnSettings10.setBackground(new java.awt.Color(255, 89, 33));
        btnSettings10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSettings10.setForeground(new java.awt.Color(255, 255, 255));
        btnSettings10.setText("Backup Database");
        btnSettings10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettings10ActionPerformed(evt);
            }
        });

        btnSettings11.setBackground(new java.awt.Color(255, 89, 33));
        btnSettings11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSettings11.setForeground(new java.awt.Color(255, 255, 255));
        btnSettings11.setText("Repair Images");
        btnSettings11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettings11ActionPerformed(evt);
            }
        });

        gTb.setBackground(new java.awt.Color(34, 34, 78));
        gTb.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        gTb.setForeground(new java.awt.Color(255, 255, 255));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Teachers Boys");

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Teachers Girls");

        gTg.setBackground(new java.awt.Color(34, 34, 78));
        gTg.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        gTg.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(g8g, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(g8b, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(g9g, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g9b, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(g10g, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(g10b, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(g11g, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(g11b, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(gTg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gTb, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSettings8)
                                .addGap(18, 18, 18)
                                .addComponent(btnSettings9)))
                        .addGap(0, 28, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(CCodeForTextV1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(CCodeForTextV2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CCodeForTextV3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(allowVote, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(allowNominate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(allowGetIPAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RequireWitnessDetails, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ForceBypassMode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(forceRandom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(displayPictures, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(displayTextOnImages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(EnableTestMode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(promptedUsers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(autopilot))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(trackVotedFor))
                                    .addComponent(btnSettings5, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnSettings10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSettings11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSettings7, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
                                .addGap(39, 39, 39))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jLabel6)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g8b, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(g9b, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel8))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(g9g, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g8g, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(g10b, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabel18)))
                        .addComponent(g10g, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabel19)
                                .addGap(35, 35, 35))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(g11b, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(jLabel24)
                                        .addGap(39, 39, 39))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel23)
                                            .addComponent(jLabel25))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(gTb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(28, 28, 28))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(btnSettings8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(btnSettings9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(3, 3, 3)))))
                                .addComponent(gTg, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(g11g, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(forceRandom)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allowVote)
                    .addComponent(btnSettings7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allowNominate)
                    .addComponent(btnSettings11, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allowGetIPAddress)
                    .addComponent(btnSettings10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(RequireWitnessDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(ForceBypassMode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EnableTestMode)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(promptedUsers)
                    .addComponent(trackVotedFor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayPictures)
                    .addComponent(displayTextOnImages)
                    .addComponent(autopilot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSettings5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CCodeForTextV1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(CCodeForTextV2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CCodeForTextV3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSettings5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettings5ActionPerformed
//gets all values and updates the database with all the new data
        try {
         
            if(currentVoteList == 1)
            {
                 btn2();
            }
            else
            {
                btn1();
            }
      
            boolean allowVoting = allowVote.isSelected();
            boolean allowNominating = allowNominate.isSelected();
            boolean allowGetIP = allowGetIPAddress.isSelected();
            boolean requireWitness = RequireWitnessDetails.isSelected();
            boolean forceBypass = ForceBypassMode.isSelected();
            boolean forceRandomised = forceRandom.isSelected();
            boolean displayAllPictures = displayPictures.isSelected();
            boolean displayTextOnPictures = displayTextOnImages.isSelected();
            boolean testMode = EnableTestMode.isSelected();
            boolean promptedUsersToDisplayName = promptedUsers.isSelected();
            boolean autoPilot = autopilot.isSelected();
            boolean saveVotedFor = trackVotedFor.isSelected();
            int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
            int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
            int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());

            if (CCodeForTextV1.getText().equalsIgnoreCase("") || CCodeForTextV2.getText().equalsIgnoreCase("") || CCodeForTextV3.getText().equalsIgnoreCase("") || RGBV3 > 255 || RGBV2 > 255 || RGBV1 > 255 || RGBV3 < 0 || RGBV2 < 0 || RGBV1 < 0) {
                JOptionPane.showMessageDialog(null, "Please make sure the RGB Colour Text Box Is Filled In Correctly!\n\nExample: 255 255 255\n\nMax Range 0 - 255", "Double Check The Information", JOptionPane.ERROR_MESSAGE);
            } else {
/*
                Connection myconObj;

                String driver = "net.ucanaccess.jdbc.UcanaccessDriver";
                Class.forName(driver);

                myconObj = DriverManager.getConnection("jdbc:ucanaccess://" + cm.getDatabaseLocation() + "\\StudentVotingData.accdb");
                ResultSet result;
//                System.out.println("Update tblSettings SET AllowVote = " + allowVoting + ", AllowNominate = " + allowNominating + ", RequireWitness = " + requireWitness + ", AllowGetIP = " + allowGetIP + ", ForceBypassMode = " + forceBypass + ", ForceRandomisedDisplay = " + forceRandomised + ", DisplayPictures = " + displayAllPictures + ", TestMode = " + testMode + ", PromptedUsersToDisplayName = " + promptedUsersToDisplayName + ", ColourCodeForTextV1 = \"" + CCodeForTextV1.getText() + "\", ColourCodeForTextV2 = \"" + CCodeForTextV2.getText() + "\", ColourCodeForTextV3 = \"" + CCodeForTextV3.getText() + "\", DisplayTextOnPictures = " + displayTextOnPictures + ", maxUsersAllowed = " + mConnections.getText() + " WHERE SchoolType = '" + cm.getSchoolType() + "'");
                String query = "Update tblSettings SET AllowVote = " + allowVoting + ", AllowNominate = " + allowNominating + ", RequireWitness = " + requireWitness + ", AllowGetIP = " + allowGetIP + ", ForceBypassMode = " + forceBypass + ", ForceRandomisedDisplay = " + forceRandomised + ", DisplayPictures = " + displayAllPictures + ", TrackVotedFor = " + saveVotedFor + ",TestMode = " + testMode + ", PromptedUsersToDisplayName = " + promptedUsersToDisplayName + ", ColourCodeForTextV1 = \"" + CCodeForTextV1.getText() + "\", ColourCodeForTextV2 = \"" + CCodeForTextV2.getText() + "\", ColourCodeForTextV3 = \"" + CCodeForTextV3.getText() + "\", DisplayTextOnPictures = " + displayTextOnPictures + ", autopilot = " + autoPilot + " WHERE SchoolType = '" + cm.getSchoolType() + "'";
                PreparedStatement add = myconObj.prepareStatement(query);
                add.executeUpdate();
                //updates settings file
           
          //         PrintWriter printer = new PrintWriter(new FileWriter(cm.getDatabaseLocation() + "\\antiOverloadMaxConnections.db"));
            //    printer.println(mConnections.getText());
            //    printer.close();
*/
//Using New and Improved Settings System

PrintWriter optimisedSettings = new PrintWriter(new FileWriter(cm.getDatabaseLocation() + "\\OverallSettings.db", false));

    optimisedSettings.println("AllowVote#" + allowVoting);
    optimisedSettings.println("AllowNominate#"+ allowNominating);
    optimisedSettings.println("RequireWitness#" + requireWitness);
    optimisedSettings.println("AllowGetIP#" + allowGetIP);
    optimisedSettings.println("ForceBypassMode#"+ forceBypass);
    optimisedSettings.println("ForceRandomisedDisplay#" + forceRandomised);
    optimisedSettings.println("DisplayPictures#" + displayAllPictures);
    optimisedSettings.println("TrackVotedFor#"+ saveVotedFor);
    optimisedSettings.println("TestMode#" + testMode);
    optimisedSettings.println("PromptedUsersToDisplayName#" + promptedUsersToDisplayName);
    optimisedSettings.println("ColourCodeForTextV1#" + CCodeForTextV1.getText());
    optimisedSettings.println("ColourCodeForTextV2#" + CCodeForTextV2.getText());
    optimisedSettings.println("ColourCodeForTextV3#" + CCodeForTextV3.getText());
    optimisedSettings.println("DisplayTextOnPictures#" + displayTextOnPictures);
    optimisedSettings.println("autopilot#" + autoPilot);
 
    
    
    optimisedSettings.close();
    AutoRepair ar = new AutoRepair();
    ar.saveSettingsToLocal();
                new AdministrationMainModern().setVisible(true);
                this.dispose();
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Please make sure everything is filled in corrrectly before saving");
        }


    }//GEN-LAST:event_btnSettings5ActionPerformed

    private void g8gActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g8gActionPerformed

    }//GEN-LAST:event_g8gActionPerformed

    private void allowVoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allowVoteActionPerformed

    }//GEN-LAST:event_allowVoteActionPerformed

    private void forceRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forceRandomActionPerformed
      
    }//GEN-LAST:event_forceRandomActionPerformed

    private void displayPicturesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayPicturesActionPerformed
        boolean displayPicturesSelection = displayPictures.isSelected();

        if (displayPicturesSelection == true) {
            displayTextOnImages.setVisible(true);
        } else {
            displayTextOnImages.setVisible(false);

        }
    }//GEN-LAST:event_displayPicturesActionPerformed

    private void CCodeForTextV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CCodeForTextV1ActionPerformed

    }//GEN-LAST:event_CCodeForTextV1ActionPerformed

    private void CCodeForTextV1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CCodeForTextV1MouseClicked
        try {

            int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
            int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
            int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());
            CCodeForTextV1.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV2.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV3.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_CCodeForTextV1MouseClicked

    private void CCodeForTextV2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CCodeForTextV2MouseClicked
        try {

            int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
            int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
            int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());
            CCodeForTextV1.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV2.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV3.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_CCodeForTextV2MouseClicked

    private void CCodeForTextV3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CCodeForTextV3MouseClicked
        try {

            int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
            int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
            int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());
            CCodeForTextV1.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV2.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV3.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_CCodeForTextV3MouseClicked

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        try {

            int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
            int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
            int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());
            CCodeForTextV1.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV2.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV3.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jPanel1MouseEntered

    private void CCodeForTextV1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CCodeForTextV1MouseEntered
        try {

            int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
            int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
            int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());
            CCodeForTextV1.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV2.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV3.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_CCodeForTextV1MouseEntered

    private void CCodeForTextV2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CCodeForTextV2MouseEntered
        try {

            int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
            int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
            int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());
            CCodeForTextV1.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV2.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV3.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_CCodeForTextV2MouseEntered

    private void CCodeForTextV3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CCodeForTextV3MouseEntered
        try {

            int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
            int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
            int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());
            CCodeForTextV1.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV2.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            CCodeForTextV3.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_CCodeForTextV3MouseEntered

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        try {

            if (evt.getKeyCode() == KeyEvent.VK_TAB) {

                int RGBV1 = Integer.parseInt(CCodeForTextV1.getText());
                int RGBV2 = Integer.parseInt(CCodeForTextV2.getText());
                int RGBV3 = Integer.parseInt(CCodeForTextV3.getText());
                CCodeForTextV1.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
                CCodeForTextV2.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
                CCodeForTextV3.setForeground(new java.awt.Color(RGBV1, RGBV2, RGBV3));
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_formKeyPressed

    private void ForceBypassModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForceBypassModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ForceBypassModeActionPerformed

    private void RequireWitnessDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RequireWitnessDetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RequireWitnessDetailsActionPerformed

    private void EnableTestModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnableTestModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EnableTestModeActionPerformed

    private void promptedUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promptedUsersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_promptedUsersActionPerformed

    private void jLabel21MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MousePressed

    }//GEN-LAST:event_jLabel21MousePressed

    private void btnSettings7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettings7ActionPerformed
        new MultiVote().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSettings7ActionPerformed

    private void btnSettings8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettings8ActionPerformed
 btn1();    
    }//GEN-LAST:event_btnSettings8ActionPerformed

    private void btnSettings9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettings9ActionPerformed
        
        btn2();
     
    }//GEN-LAST:event_btnSettings9ActionPerformed

    private void autopilotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autopilotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autopilotActionPerformed

    private void btnSettings10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettings10ActionPerformed
        AutoRepair ar = new AutoRepair();
        ar.backupDatabase("StudentVotingData - Original Backup");
        ar.backupDatabase("default");
            btnSettings10.setBackground(new java.awt.Color(40,224,64));
    }//GEN-LAST:event_btnSettings10ActionPerformed

    private void btnSettings11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettings11ActionPerformed
        AutoRepair ar = new AutoRepair(); 
        ar.forceImageRepair();
     ar.reloadOptimisedSystem();
     ar.backupDatabase("default");


     JOptionPane.showMessageDialog(null, "-\tThe System has attempted to repair all Images\n-\tA Backup Was Made\n\nPlease Restart The Program On All Active Computers!");
   
    }//GEN-LAST:event_btnSettings11ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CCodeForTextV1;
    private javax.swing.JTextField CCodeForTextV2;
    private javax.swing.JTextField CCodeForTextV3;
    private javax.swing.JCheckBox EnableTestMode;
    private javax.swing.JCheckBox ForceBypassMode;
    private javax.swing.JCheckBox RequireWitnessDetails;
    private javax.swing.JCheckBox allowGetIPAddress;
    private javax.swing.JCheckBox allowNominate;
    private javax.swing.JCheckBox allowVote;
    private javax.swing.JCheckBox autopilot;
    private javax.swing.JButton btnSettings10;
    private javax.swing.JButton btnSettings11;
    private javax.swing.JButton btnSettings5;
    private javax.swing.JButton btnSettings7;
    private javax.swing.JButton btnSettings8;
    private javax.swing.JButton btnSettings9;
    private javax.swing.JCheckBox displayPictures;
    private javax.swing.JCheckBox displayTextOnImages;
    private javax.swing.JCheckBox forceRandom;
    private javax.swing.JTextField g10b;
    private javax.swing.JTextField g10g;
    private javax.swing.JTextField g11b;
    private javax.swing.JTextField g11g;
    private javax.swing.JTextField g8b;
    private javax.swing.JTextField g8g;
    private javax.swing.JTextField g9b;
    private javax.swing.JTextField g9g;
    private javax.swing.JTextField gTb;
    private javax.swing.JTextField gTg;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox promptedUsers;
    private javax.swing.JCheckBox trackVotedFor;
    // End of variables declaration//GEN-END:variables

    public boolean checkStatus(String fieldToCheck) {
        try {

            Scanner checkSettings = new Scanner(new File(cm.getLocalStorageLocation() + "\\OverallSettings.db"));
            while(checkSettings.hasNextLine())
            {
                String line = checkSettings.nextLine();
                Scanner scLine = new Scanner(line).useDelimiter("#");
                String field = scLine.next();
                   if(field.equalsIgnoreCase(fieldToCheck))
                {
                    return scLine.nextBoolean();
                    
                }
            }
            
        } catch (Exception ex) {

        }
        return false;

    }

   
    private void btn1()
    {
       
         try {
             
   
         cm.refreshSettings();
       
            int totalGrade8B = Integer.parseInt(g8b.getText());
            int totalGrade8G = Integer.parseInt(g8g.getText());
            int totalGrade9B = Integer.parseInt(g9b.getText());
            int totalGrade9G = Integer.parseInt(g9g.getText());
            int totalGrade10B = Integer.parseInt(g10b.getText());
            int totalGrade10G = Integer.parseInt(g10g.getText());
            int totalGrade11B = Integer.parseInt(g11b.getText());
            int totalGrade11G = Integer.parseInt(g11g.getText());
             int totalTeachersB = Integer.parseInt(gTb.getText());
            int totalTeachersG = Integer.parseInt(gTg.getText());
            
               
            jLabel6.setText("Enter The Total Allowed Votes For Vote 1");
                
            System.out.println(totalGrade8B + " " + totalGrade8G + " " + totalGrade9B + " " + totalGrade9G + " " + totalGrade10B + " " + totalGrade10G + " " + totalGrade11B + " " + totalGrade11G);
            
            PrintWriter printer = null;
          
                voteSelected = true;
               
                printer = new PrintWriter(new File(cm.getDatabaseLocation() + "\\SettingsV2.db"));
                printer.println("Grade 8 Boys Votes - #" + totalGrade8B + "#");
                printer.println("Grade 8 Girls Votes - #" + totalGrade8G + "#");
                printer.println("Grade 9 Boys Votes - #" + totalGrade9B + "#");
                printer.println("Grade 9 Girls Votes - #" + totalGrade9G + "#");
                printer.println("Grade 10 Boys Votes - #" + totalGrade10B + "#");
                printer.println("Grade 10 Girls Votes - #" + totalGrade10G + "#");
                printer.println("Grade 11 Boys Votes - #" + totalGrade11B + "#");
                printer.println("Grade 11 Girls Votes - #" + totalGrade11G + "#");
                 printer.println("Teacher Boys Votes - #" + totalTeachersB + "#");
                printer.println("Teacher Girls Votes - #" + totalTeachersG + "#");
                printer.close();
        
                
        g8b.setText(cm.getGradeData("8", "b", "1"));
        g8g.setText(cm.getGradeData("8", "f", "1"));
        g9b.setText(cm.getGradeData("9", "b", "1"));
        g9g.setText(cm.getGradeData("9", "f", "1"));
        g10b.setText(cm.getGradeData("10", "b", "1"));
        g10g.setText(cm.getGradeData("10", "f", "1"));
        g11b.setText(cm.getGradeData("11", "b", "1"));
        g11g.setText(cm.getGradeData("11", "f", "1"));
           gTb.setText(cm.getGradeData("Teacher", "b", "1"));
        gTg.setText(cm.getGradeData("Teacher", "f", "1"));
              currentVoteList = 1;
            btnSettings9.setBackground(new java.awt.Color(255, 89, 33));
            btnSettings8.setBackground(new java.awt.Color(40,224,64));
         
        } catch (Exception e)
        {

                       JOptionPane.showMessageDialog(null, "Please make sure all information is filled in correctly");

        }
        
    }
     private void btn2()
    {
   
        
           try {

         cm.refreshSettings();
    
            int totalGrade8B = Integer.parseInt(g8b.getText());
            int totalGrade8G = Integer.parseInt(g8g.getText());
            int totalGrade9B = Integer.parseInt(g9b.getText());
            int totalGrade9G = Integer.parseInt(g9g.getText());
            int totalGrade10B = Integer.parseInt(g10b.getText());
            int totalGrade10G = Integer.parseInt(g10g.getText());
            int totalGrade11B = Integer.parseInt(g11b.getText());
            int totalGrade11G = Integer.parseInt(g11g.getText());
            int totalTeachersB = Integer.parseInt(gTb.getText());
            int totalTeachersG = Integer.parseInt(gTg.getText());

      jLabel6.setText("Enter The Total Allowed Votes For Vote 2");
            

             PrintWriter printer = null;
                printer = new PrintWriter(new File(cm.getDatabaseLocation() + "\\Settings.db"));

                printer.println("Grade 8 Boys Votes - #" + totalGrade8B + "#");
                printer.println("Grade 8 Girls Votes - #" + totalGrade8G + "#");
                printer.println("Grade 9 Boys Votes - #" + totalGrade9B + "#");
                printer.println("Grade 9 Girls Votes - #" + totalGrade9G + "#");
                printer.println("Grade 10 Boys Votes - #" + totalGrade10B + "#");
                printer.println("Grade 10 Girls Votes - #" + totalGrade10G + "#");
                printer.println("Grade 11 Boys Votes - #" + totalGrade11B + "#");
                printer.println("Grade 11 Girls Votes - #" + totalGrade11G + "#");
                printer.println("Teacher Boys Votes - #" + totalTeachersB + "#");
                printer.println("Teacher Girls Votes - #" + totalTeachersG + "#");
                printer.close();
          
        g8b.setText(cm.getGradeData("8", "b", "2"));
        g8g.setText(cm.getGradeData("8", "f", "2"));
        g9b.setText(cm.getGradeData("9", "b", "2"));
        g9g.setText(cm.getGradeData("9", "f", "2"));
        g10b.setText(cm.getGradeData("10", "b", "2"));
        g10g.setText(cm.getGradeData("10", "f", "2"));
        g11b.setText(cm.getGradeData("11", "b", "2"));
        g11g.setText(cm.getGradeData("11", "f", "2"));
        gTb.setText(cm.getGradeData("Teacher", "b", "2"));
        gTg.setText(cm.getGradeData("Teacher", "f", "2"));
              voteSelected = false;
        
                           currentVoteList = 2;
            btnSettings8.setBackground(new java.awt.Color(255, 89, 33));
             btnSettings9.setBackground(new java.awt.Color(40,224,64));
            
        } catch (Exception ex) {
               
           cm.CheckIfDatabaseLocationExcists();
           JOptionPane.showMessageDialog(null, "Please make sure all information is filled in correctly");
            }
        }
         
    
}
